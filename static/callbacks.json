{
	"openapi": "3.0.0",
	"info": {
		"title": "Callback List",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": " https://",
			"description": "For testing purposes. Select this to direct callback to your server."
		}
	],
	"paths": {
		"/{callback01Url}/?id={id}&error={error}&status={status}&type={type}&initialOrderID={initialOrderID}&amount={amount}": {
			"post": {
				"summary": "#01 - Topup - DEPRECATED",
				"description": "Callback received in case of status change in a topup payment",
				"parameters": [
					{
						"name": "callback01Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible by the source server",
						"schema": {
							"type": "string",
							"example": "enk0r3xvfg4ms.x.pipedream.net"
						}
					},
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "the transaction id",
						"schema": {
							"type": "string",
							"example": "TOPUP123"
						}
					},
					{
						"name": "error",
						"in": "path",
						"required": true,
						"description": "the error codes for failed payments :  \n0 = 0XXX operation succeeded or still processing  \n10 = 1XXX operation rejected because of bad request configuration  \n11 = 2XXX operation rejected because of bad reference usage  \n12 = 3XXX operation rejected because of bad account configuration  \n13 = 4XXX operation rejected because of the bank or the supplier  \n14 = 5XXX operation rejected because of a system error  \n15 = 6XXX operation rejected because of anti-fraud engine",
						"schema": {
							"type": "string",
							"example": "0"
						}
					},
					{
						"name": "status",
						"in": "path",
						"required": true,
						"description": "the transaction status :  \n-1 = unknow  \n0 = waiting  \n1 = completed  \n2 = refunded  \n3 = refused  \n4 = waiting for validation  \n5 = cancelled  \n6 = waiting to be sent",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "type",
						"in": "path",
						"required": true,
						"description": "the callback type",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "initialOrderID",
						"in": "path",
						"required": true,
						"description": "initial transaction orderid",
						"schema": {
							"type": "string",
							"example": "ABCD1234"
						}
					},
					{
						"name": "amount",
						"in": "path",
						"required": true,
						"description": "the transaction amount",
						"schema": {
							"type": "number",
							"format": "float",
							"example": "1234.56"
						}
					}
				],
				"callbacks": {
					"onData": {
						"https://yourCallbackAdress/?id=TOPUP123&error=0&status=1&type=1&initialOrderID=ABCD1234&amount=12": {
							"post": {
								"requestBody": {
									"description": "Example",
									"content": {
										"application/x-www-form-urlencoded": {
											"schema": {
												"type": "string",
												"example": "https://YourCallbackUrl/?id=TOPUP123&error=0&status=1&type=1&initialOrderID=123456&amount=150.23"
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback01Url}": {
			"post": {
				"summary": "#01 - Topup",
				"description": "Callback received in case of status change in a topup payment",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the transaction id",
										"example": "TOPUP123"
									},
									"amount": {
										"type": "string",
										"description": "the transaction amount",
										"example": "1234.56"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "1"
									},
									"status": {
										"type": "string",
										"description": "the transaction status :  \n-1 = unknow  \n0 = waiting  \n1 = completed  \n2 = refunded  \n3 = refused  \n4 = waiting for validation  \n5 = cancelled  \n6 = waiting to be sent",
										"example": "1"
									},
									"error": {
										"type": "string",
										"description": "the error codes for failed payments :  \n0 = 0XXX operation succeeded or still processing  \n10 = 1XXX operation rejected because of bad request configuration  \n11 = 2XXX operation rejected because of bad reference usage  \n12 = 3XXX operation rejected because of bad account configuration  \n13 = 4XXX operation rejected because of the bank or the supplier  \n14 = 5XXX operation rejected because of a system error  \n15 = 6XXX operation rejected because of anti-fraud engine",
										"example": "0"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback01Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the transaction id",
														"example": "TOPUP123"
													},
													"amount": {
														"type": "string",
														"description": "the transaction amount",
														"example": "1234.56"
													},
													"status": {
														"type": "string",
														"description": "the transaction status :  \n-1 = unknow  \n0 = waiting  \n1 = completed  \n2 = refunded  \n3 = refused  \n4 = waiting for validation  \n5 = cancelled  \n6 = waiting to be sent",
														"example": "1"
													},
													"error": {
														"type": "string",
														"description": "the error codes for failed payments :  \n0 = 0XXX operation succeeded or still processing  \n10 = 1XXX operation rejected because of bad request configuration  \n11 = 2XXX operation rejected because of bad reference usage  \n12 = 3XXX operation rejected because of bad account configuration  \n13 = 4XXX operation rejected because of the bank or the supplier  \n14 = 5XXX operation rejected because of a system error  \n15 = 6XXX operation rejected because of anti-fraud engine",
														"example": "0"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "1"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback04Url}": {
			"post": {
				"summary": "#04 - KYC demand - DEPRECATED",
				"description": "Callback received in case of status change in the KYC demand",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "callback type",
										"example": "4"
									},
									"status": {
										"type": "string",
										"description": "Status of the KYC demand :  \n- Initialized  \n- Incomplete  \n- Complete  \n- Pending",
										"example": "Incomplete"
									},
									"appUserId": {
										"type": "string",
										"description": "User unique identifier",
										"example": "rx193bo32"
									},
									"diligences": {
										"type": "array",
										"items": {
										"type": "object",
										"properties": {
											"diligenceType": {
												"type": "string",
												"description": "Type of diligence :  \n- ID_CARD  \n- PASSPORT  \n- VETERAN_CARD  \n- MILITARY_ID  \n- RES_CARD  \n- EMPL_CONTRACT  \n- PAYSLIP  \n- CESU  \n- PENSION_RET  \n- STUDENT_ID  \n- TAX_NOTICE  \n- INCOME_TAX  \n- ASDIR  \n- RSA  \n- RMI  \n- DIS_CERTIF  \n- PROOF_FAM_ALLOW  \n- ACC_STAT  \n- SCTIN  \n- ACC_AGG  \n- SELFIE",
												"example": "PASSPORT"
											},
											"reason": {
												"type": "string",
												"description": "reason for rejection of the diligence: \n- Data inversion \n- Invalid MRZ band \n- This document is not an identity document \n- Incomplete document \n- Illegible document \n- Blurred document \n- Expired document \n- Document and data mismatch \n- Minor person \n- Identity fraud \n- Too dark selfie \n- Too bright selfie \n- Non-matching selfie \n- Invalid selfie",
												"example": "Illegible document"
											},
											"status": {
												"type": "string",
												"description": "Status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually",
												"example": "Validated"
											}
										}
										}
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback04Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"description": "callback type",
														"example": "4"
													},
													"status": {
														"type": "string",
														"description": "Status of the KYC demand :  \n- Initialized  \n- Incomplete  \n- Complete  \n- Pending",
														"example": "Incomplete"
													},
													"appUserId": {
														"type": "string",
														"description": "User unique identifier",
														"example": "rx193bo32"
													},
													"diligences": {
														"type": "array",
														"items": {
														"type": "object",
														"properties": {
															"diligenceType": {
																"type": "string",
																"description": "Type of diligence :  \n- ID_CARD  \n- PASSPORT  \n- VETERAN_CARD  \n- MILITARY_ID  \n- RES_CARD  \n- EMPL_CONTRACT  \n- PAYSLIP  \n- CESU  \n- PENSION_RET  \n- STUDENT_ID  \n- TAX_NOTICE  \n- INCOME_TAX  \n- ASDIR  \n- RSA  \n- RMI  \n- DIS_CERTIF  \n- PROOF_FAM_ALLOW  \n- ACC_STAT  \n- SCTIN  \n- ACC_AGG  \n- SELFIE",
																"example": "PASSPORT"
															},
															"reason": {
																"type": "string",
																"description": "reason for rejection of the diligence: \n- Data inversion \n- Invalid MRZ band \n- This document is not an identity document \n- Incomplete document \n- Illegible document \n- Blurred document \n- Expired document \n- Document and data mismatch \n- Minor person \n- Identity fraud \n- Too dark selfie \n- Too bright selfie \n- Non-matching selfie \n- Invalid selfie",
												                "example": "Illegible document"
															},
															"status": {
																"type": "string",
																"description": "Status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually",
																"example": "Validated"
															}
														}
														}
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback04-V2.0Url}": {
			"post": {
				"summary": "#04 - KYC demand - Version 2.0",
				"description": "Callback received in case of status change in the KYC demand",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "callback type",
										"example": "4"
									},
									"status": {
										"type": "string",
										"description": "Status of the KYC demand : \n- Initialized \n- BeingReceived (only used in KYB process) \n- FullyReceived (only used in KYB process) \n- Pending \n- Incomplete  \n- Complete",
										"example": "Incomplete"
									},
									"appUserId": {
										"type": "string",
										"description": "User unique identifier",
										"example": "rx193bo32"
									},
									"kycLevel": 
									{
										"type": "string",
										"description": "the User's KYC level :  \n- Medium \n- High",
										"example": "High"
									},
									"expectedDiligences": {
															"type": "array",
															"description": "the list of expected diligences types. It is not returned in the callback when all expected diligences are received.",
															"items": {
										                    "type": "object",
															"properties": {
																"type": {
																	"type": "string",
																	"description": "the type of diligence :  \n- Identity  \n- Complementary",
																	"example": "Identity"
																},
																"expectedCount": {
																	"type": "integer",
																	"description": "the expected diligences count",
																	"example": 1
																},
																"possibleDiligenceSubTypes": {
																	"type": "array",
																	"description": "the list of possible diligences sub type: \n ID_CARD \n PASSPORT \n VETERAN_CARD \n MILITARY_ID \n RES_CARD \n SELFIE \n SCTIN",
																	"items": {
																	"type": "string"
																	},
																	"example": [
																		"ID_CARD",
																		"PASSPORT",
																		"VETERAN_CARD",
																		"MILITARY_ID",
																		"RES_CARD"
																																				
																	]
																}
															}
															}
														},
														"receivedDiligences": {
															"type": "array",
															"description": "The list of diligences types that are received",
															"items": {
															"type": "object",
															"properties": {
																"diligenceType": {
																	"type": "string",
																	"description": "the diligence sub type : \n ID_CARD \n PASSPORT \n VETERAN_CARD \n MILITARY_ID \n RES_CARD \n SELFIE \n SCTIN",
																	"example": "SELFIE"
																},
																"status": {
																	"type": "string",
																	"description": "the status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually",
																	"example": "Validated"
																},
																"reason": {
																	"type": "string",
																	"description": "The reason for rejection of the diligence: \n- Data inversion \n- Invalid MRZ band \n- This document is not an identity document \n- Incomplete document \n- Illegible document \n- Blurred document \n- Expired document \n- Document and data mismatch \n- Minor person \n- Identity fraud \n- Too dark selfie \n- Too bright selfie \n- Non-matching selfie \n- Invalid selfie"
																	
																}
															}
															}
														}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback04-V2.0Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"description": "callback type",
														"example": "4"
													},
													"status": {
														"type": "string",
														"description": "Status of the KYC demand : \n- Initialized \n- BeingReceived (only used in KYB process) \n- FullyReceived (only used in KYB process) \n- Pending \n- Incomplete  \n- Complete",
														"example": "Incomplete"
													},
													"appUserId": {
														"type": "string",
														"description": "User unique identifier",
														"example": "rx193bo32"
													},
													"kycLevel": 
													{
														"type": "string",
														"description": "the User's KYC level :  \n- Medium \n- High",
														"example": "High"
													},
													"expectedDiligences": {
															"type": "array",
															"description": "the list of expected diligences types. It is not returned in the callback when all expected diligences are received.",
															"items": {
										                    "type": "object",
															"properties": {
																"type": {
																	"type": "string",
																	"description": "the type of diligence :  \n- Identity  \n- Complementary",
																	"example": "Identity"
																},
																"expectedCount": {
																	"type": "integer",
																	"description": "the expected diligences count",
																	"example": 1
																},
																"possibleDiligenceSubTypes": {
																	"type": "array",
																	"description": "the diligence sub type : \n ID_CARD \n PASSPORT \n VETERAN_CARD \n MILITARY_ID \n RES_CARD \n SELFIE \n SCTIN",
																	"items": {
																	"type": "string"
																	},
																	"example": [
																		"ID_CARD",
																		"PASSPORT",
																		"VETERAN_CARD",
																		"MILITARY_ID",
																		"RES_CARD"
																																																	
																	]
																}
															}
															}
														},
														"receivedDiligences": {
															"type": "array",
															"description": "The list of diligences types that are received",
															"items": {
															"type": "object",
															"properties": {
																"diligenceType": {
																	"type": "string",
																	"description": "the diligence sub type : \n ID_CARD \n PASSPORT \n VETERAN_CARD \n MILITARY_ID \n RES_CARD \n SELFIE \n SCTIN",
																	"example": "SCTIN"
																},
																"status": {
																	"type": "string",
																	"description": "the status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually",
																	"example": "Validated"
																},
																"reason": {
																	"type": "string",
																	"description": "The reason for rejection of the diligence: \n- Data inversion \n- Invalid MRZ band \n- This document is not an identity document \n- Incomplete document \n- Illegible document \n- Blurred document \n- Expired document \n- Document and data mismatch \n- Minor person \n- Identity fraud \n- Too dark selfie \n- Too bright selfie \n- Non-matching selfie \n- Invalid selfie"
																}
															}
															}
														}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback16Url}": {
			"post": {
				"summary": "#16 - SCT In",
				"description": "Callback received in case of status change in an incoming SCT (Xpollens account is credited)",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the transaction id",
										"example": "10743"
									},
									"refundReference": {
										"type": "string",
										"description": "the new transaction id in case of refund status",
										"example": "REFUND-S-MONEY-20230306123230103141"
									},
									"reference": {
										"type": "string",
										"description": "the transaction orderid",
										"example": "S-MONEY-20230306123230103141"
									},
									"status": {
										"type": "string",
										"description": "the transaction status :  \n1 = succeeded  \n2 = refund",
										"example": "1"
									},
									"userid": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "dnboz3uht"
									},
									"sepaReasonCode": {
										"type": "string",
										"description": "the SEPA Reason Code provided to help you identify why the payment failed",
										"example": "AC01"
									},
									"sepaReason": {
										"type": "string",
										"description": "the description of the SEPA reason code",
										"example": "Format of the account number specified is not correct"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "16"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback16Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the transaction id",
														"example": "10743"
													},
													"reference": {
														"type": "string",
														"description": "the transaction orderid",
														"example": "o0pbb6ryc"
													},
													"status": {
														"type": "string",
														"description": "the transaction status :  \n1 = succeeded  \n2 = refund",
														"example": "1"
													},
													"userid": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "dnboz3uht"
													},
													"sepaReasonCode": {
														"type": "string",
														"description": "the SEPA Reason Code provided to help you identify why the payment failed",
														"example": "AC01"
													},
													"sepaReason": {
														"type": "string",
														"description": "the description of the SEPA reason code",
														"example": "Format of the account number specified is not correct"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "16"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback17Url}": {
			"post": {
				"summary": "#17 - SCT Out",
				"description": "Callback received in case of status change in an outgoing SCT (Xpollens account is debited)",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the transaction id",
										"example": "10743"
									},
									"reference": {
										"type": "string",
										"description": "the transaction orderid",
										"example": "o0pbb6ryc"
									},
									"status": {
										"type": "string",
										"description": "the transaction status :  \n0 = pending  \n1 = succedeed  \n2 = refunded  \n3 = failed",
										"example": "1"
									},
									"userid": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "dnboz3uht"
									},
									"sepaReasonCode": {
										"type": "string",
										"description": "the SEPA Reason Code provided to help you identify why the payment failed",
										"example": "AC01"
									},
									"sepaReason": {
										"type": "string",
										"description": "the description of the SEPA reason code",
										"example": "Format of the account number specified is not correct"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "17"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback17Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the transaction id",
														"example": "10743"
													},
													"reference": {
														"type": "string",
														"description": "the transaction orderid",
														"example": "o0pbb6ryc"
													},
													"status": {
														"type": "string",
														"description": "the transaction status :  \n0 = pending  \n1 = succedeed  \n2 = refunded  \n3 = failed",
														"example": "1"
													},
													"userid": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "dnboz3uht"
													},
													"sepaReasonCode": {
														"type": "string",
														"description": "the SEPA Reason Code provided to help you identify why the payment failed",
														"example": "AC01"
													},
													"sepaReason": {
														"type": "string",
														"description": "the description of the SEPA reason code",
														"example": "Format of the account number specified is not correct"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "17"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback18Url}": {
			"post": {
				"summary": "#18 - SDD Out",
				"description": "Callback received in case of status change in an outgoing SDD (Xpollens account is credited)",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the transaction id",
										"example": "10743"
									},
									"reference": {
										"type": "string",
										"description": "the transaction orderid",
										"example": "o0pbb6ryc"
									},
									"status": {
										"type": "string",
										"description": "the transaction status :  \n0 = pending  \n1 = succedeed  \n2 = refunded  \n3 = failed",
										"example": "1"
									},
									"userid": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "dnboz3uht"
									},
									"sepaReasonCode": {
										"type": "string",
										"description": "the SEPA Reason Code provided to help you identify why the payment failed",
										"example": "AC01"
									},
									"sepaReason": {
										"type": "string",
										"description": "the description of the SEPA reason code",
										"example": "Format of the account number specified is not correct"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "18"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback18Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the transaction id",
														"example": "10743"
													},
													"reference": {
														"type": "string",
														"description": "the transaction orderid",
														"example": "o0pbb6ryc"
													},
													"status": {
														"type": "string",
														"description": "the transaction status :  \n0 = pending  \n1 = succedeed  \n2 = refunded  \n3 = failed",
														"example": "1"
													},
													"userid": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "dnboz3uht"
													},
													"sepaReasonCode": {
														"type": "string",
														"description": "the SEPA Reason Code provided to help you identify why the payment failed",
														"example": "AC01"
													},
													"sepaReason": {
														"type": "string",
														"description": "the description of the SEPA reason code",
														"example": "Format of the account number specified is not correct"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "18"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback19Url}": {
			"post": {
				"summary": "#19 - SDD In",
				"description": "Callback received in case of status change in an incoming SDD (Xpollens account is debited)",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the transaction id",
										"example": "10735"
									},
									"reference": {
										"type": "string",
										"description": "the transaction orderid",
										"example": "S-MONEY-20210223161700000112"
									},
									"status": {
										"type": "string",
										"description": "the transaction status :  \n0 = pending  \n1 = succedeed  \n2 = refunded  \n3 = failed",
										"example": "1"
									},
									"userid": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "K-oZktdWv"
									},
									"sepaReasonCode": {
										"type": "string",
										"description": "the SEPA Reason Code provided to help you identify why the payment failed",
										"example": "AC01"
									},
									"sepaReason": {
										"type": "string",
										"description": "the description of the SEPA reason code",
										"example": "Format of the account number specified is not correct"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "19"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback19Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the transaction id",
														"example": "10743"
													},
													"reference": {
														"type": "string",
														"description": "the transaction orderid",
														"example": "o0pbb6ryc"
													},
													"status": {
														"type": "string",
														"description": "the transaction status :  \n0 = pending  \n1 = succedeed  \n2 = refunded  \n3 = failed",
														"example": "1"
													},
													"userid": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "dnboz3uht"
													},
													"sepaReasonCode": {
														"type": "string",
														"description": "the SEPA Reason Code provided to help you identify why the payment failed",
														"example": "AC01"
													},
													"sepaReason": {
														"type": "string",
														"description": "the description of the SEPA reason code",
														"example": "Format of the account number specified is not correct"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "19"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback20Url}": {
			"post": {
				"summary": "#20 - Card operation",
				"description": "Callback received when a card authorisation is created following its processing in Xpollens and each time its status change",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the Xpollens internal authorization id",
										"example": "464890"
									},
									"reference": {
										"type": "string",
										"description": "the operation orderid",
										"example": "8Y8Loh9L8E6FJsA7J1Tyrg"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "20"
									},
									"appCardId": {
										"type": "string",
										"description": "the reference or alias of the card",
										"example": "null"
									},
									"hint": {
										"type": "string",
										"description": "the card number hint",
										"example": "9396XXXXXXXX6075"
									},
									"transactionAmount": {
										"type": "string",
										"description": "the amount in local currency in decimal",
										"example": "11.9"
									},
									"currencyCodeTransaction": {
										"type": "string",
										"description": "the transaction currency code (ISO 4217 numeric code)",
										"example": "978"
									},
									"cardHolderBillingAmount": {
										"type": "string",
										"description": "the amount in euro (used for foreign currency transactions) in decimal format",
										"example": ""
									},
									"cardHolderBillingConversionRate": {
										"type": "string",
										"description": "the exchange rate (used for foreign currency transactions) in decimal value in string data type",
										"example": ""
									},
									"availableBalance": {
										"type": "string",
										"description": "the balance after authorisation (or after a change in status = cancellation, expiry) in decimal format",
										"example": "0.96"
									},
									"actionCode": {
										"type": "string",
										"description": "the response code (authorization and reasons for refusal) :  \n0 = approved  \n100 = denied, invalid card status  \n114 = denied, authorisation server does not respond  \n116 = denied, insufficient funds or limits reached  \n119 = denied, transaction not permitted to cardholder  \n198 = denied, technical error  \nother = denied, Natixis refused the transaction",
										"example": "0"
									},
									"merchantType": {
										"type": "string",
										"description": "the merchant type (Merchant Category Code) is a four-digit number listed in ISO 18245 for retail financial services. An MCC is used to classify a business by the types of goods or services it provides",
										"example": "5814"
									},
									"cardAcceptorIdentificationCodeName": {
										"type": "string",
										"description": "the merchant information (name, adress,etc…)",
										"example": "MC DONALD S\\\\GRENOBLE"
									},
									"status": {
										"type": "string",
										"description": "the Operation status :  \n0 = waiting  \n3 = failed  \n5 = cancelled  \n7 = expired",
										"example": "0"
									},
									"ert": {
										"type": "string",
										"description": "the regulatory and technical environment  \n10 = proximity (face-to-face payment)  \n2x = online payment  \n4x = unattended vending machine  \n6x = quasi-cash  \n7x = withdrawal (ATM or bank agency)",
										"example": "10"
									},
									"cardDataInputMode": {
										"type": "string",
										"description": "the input mode for the payment :  \n0 = unspecified  \n5 = contact  \n9 = contactless  \nOther = manual (no terminal), magnetic stripe,…",
										"example": "9"
									},
									"tokenRequestorID": {
										"type": "string",
										"description": "the id of the token requestor :  \n40010030273 = Apple Pay  \n40010043095 = Samsung Pay  \n40010069887 = Garmin Pay  \n40010051602 = Amazon(COF)  \n40010075001 = Google Pay  \n40010075839 = Netflix (COF)  \n40010075338  = Visa Checkout - VCO",
										"example": ""
									},
									"terminalCountryCode": {
										"type": "string",
										"description": "the Country where the payment took place",
										"example": "250"
									},
									"userid": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "dyYiUtSrj"
									},
									"executedDate": {
										"type": "string",
										"description": "the executed date of the operation. Warning: unusual date format: (dd/MM/yyyy hh:mm:ss)",
										"example": "01/12/2022 14:44:09"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback20Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the Xpollens internal authorization id",
														"example": "464890"
													},
													"reference": {
														"type": "string",
														"description": "the operation orderid",
														"example": "8Y8Loh9L8E6FJsA7J1Tyrg"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "20"
													},
													"appCardId": {
														"type": "string",
														"description": "the reference or alias of the card",
														"example": "null"
													},
													"hint": {
														"type": "string",
														"description": "the card number hint",
														"example": "9396XXXXXXXX6075"
													},
													"transactionAmount": {
														"type": "string",
														"description": "the amount in local currency in decimal",
														"example": "11.9"
													},
													"currencyCodeTransaction": {
														"type": "string",
														"description": "the transaction currency code (ISO 4217 numeric code)",
														"example": "978"
													},
													"cardHolderBillingAmount": {
														"type": "string",
														"description": "the amount in euro (used for foreign currency transactions) in decimal format",
														"example": ""
													},
													"cardHolderBillingConversionRate": {
														"type": "string",
														"description": "the exchange rate (used for foreign currency transactions) in decimal value in string data type",
														"example": ""
													},
													"availableBalance": {
														"type": "string",
														"description": "the balance after authorisation (or after a change in status = cancellation, expiry) in decimal format",
														"example": "0.96"
													},
													"actionCode": {
														"type": "string",
														"description": "the response code (authorization and reasons for refusal) :  \n0 = approved  \n100 = denied, invalid card status  \n114 = denied, authorisation server does not respond  \n116 = denied, insufficient funds or limits reached  \n119 = denied, transaction not permitted to cardholder  \n198 = denied, technical error  \nother = denied, Natixis refused the transaction",
														"example": "0"
													},
													"merchantType": {
														"type": "string",
														"description": "the merchant type (Merchant Category Code) is a four-digit number listed in ISO 18245 for retail financial services. An MCC is used to classify a business by the types of goods or services it provides",
														"example": "5814"
													},
													"cardAcceptorIdentificationCodeName": {
														"type": "string",
														"description": "the merchant information (name, adress,etc…)",
														"example": "MC DONALD S\\\\GRENOBLE"
													},
													"status": {
														"type": "string",
														"description": "the Operation status :  \n0 = waiting  \n3 = failed  \n5 = cancelled  \n7 = expired",
														"example": "0"
													},
													"ert": {
														"type": "string",
														"description": "the regulatory and technical environment  \n10 = proximity (face-to-face payment)  \n2x = online payment  \n4x = unattended vending machine  \n6x = quasi-cash  \n7x = withdrawal (ATM or bank agency)",
														"example": "10"
													},
													"cardDataInputMode": {
														"type": "string",
														"description": "the input mode for the payment :  \n0 = unspecified  \n5 = contact  \n9 = contactless  \nOther = manual (no terminal), magnetic stripe,…",
														"example": "9"
													},
													"tokenRequestorID": {
														"type": "string",
														"description": "the id of the token requestor :  \n40010030273 = Apple Pay  \n40010043095 = Samsung Pay  \n40010069887 = Garmin Pay  \n40010051602 = Amazon(COF)  \n40010075001 = Google Pay  \n40010075839 = Netflix (COF)  \n40010075338  = Visa Checkout - VCO",
														"example": ""
													},
													"terminalCountryCode": {
														"type": "string",
														"description": "the Country where the payment took place",
														"example": "250"
													},
													"userid": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "dyYiUtSrj"
													},
													"executedDate": {
														"type": "string",
														"description": "the executed date of the operation. Warning: unusual date format: (dd/MM/yyyy hh:mm:ss)",
														"example": "01/12/2022 14:44:09"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback21Url}": {
			"post": {
				"summary": "#21 - Card creation/status",
				"description": "Callback received in case of status change in a card operation",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the Xpollens internal card id",
										"example": "464890"
									},
									"reference": {
										"type": "string",
										"description": "the reference or alias of the card",
										"example": "card-lHXYoKrpn"
									},
									"type": {
										"type": "number",
										"description": "the callback type",
										"example": 21
									},
									"cardType": {
										"type": "string",
										"description": "the type of the ordered card :  \n1 = Visa classic virtual  \n2 = Visa classic physical  \n3 = Visa premium virtual  \n4 = Visa premium physical  \n6 = Visa infinite physical",
										"example": "4"
									},
									"action": {
										"type": "string",
										"description": "the action done on the card :  \n0 = creation  \n1 = cancellation  \n2 = refabrication  \n3 = renewal  \n4 = update",
										"example": "0"
									},
									"status": {
										"type": "string",
										"description": "the Status of the card :  \n0 = ordered  \n1 = sent  \n2 = activated  \n3 = expired  \n4 = opposed  \n5 = failed  \n6 = deactivated  \n7 = cancelled",
										"example": "1"
									},
									"opposedReason": {
										"type": "string",
										"description": "the reason for card opposition :  \nThis field is different than '0' only when the card is opposed.  \n07 = special conditions  \n34 = suspected fraud  \n41 = lost  \n43 = stolen)",
										"example": "0"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback21Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the Xpollens internal card id",
														"example": "464890"
													},
													"reference": {
														"type": "string",
														"description": "the reference or alias of the card",
														"example": "card-lHXYoKrpn"
													},
													"type": {
														"type": "number",
														"description": "the callback type",
														"example": 21
													},
													"cardType": {
														"type": "string",
														"description": "the type of the ordered card :  \n1 = Visa classic virtual  \n2 = Visa classic physical  \n3 = Visa premium virtual  \n4 = Visa premium physical  \n6 = Visa infinite physical",
														"example": "4"
													},
													"action": {
														"type": "string",
														"description": "the action done on the card :  \n0 = creation  \n1 = cancellation  \n2 = refabrication  \n3 = renewal  \n4 = update",
														"example": "0"
													},
													"status": {
														"type": "string",
														"description": "the Status of the card :  \n0 = ordered  \n1 = sent  \n2 = activated  \n3 = expired  \n4 = opposed  \n5 = failed  \n6 = deactivated  \n7 = cancelled",
														"example": "1"
													},
													"opposedReason": {
														"type": "string",
														"description": "the reason for card opposition :  \nThis field is different than '0' only when the card is opposed.  \n07 = special conditions  \n34 = suspected fraud  \n41 = lost  \n43 = stolen)",
														"example": "0"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback24Url}": {
			"post": {
				"summary": "#24 - Card clearing processing",
				"description": "Callback received in case of status change in a clearing batch file",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the Xpollens report id",
										"example": "1691"
									},
									"reference": {
										"type": "string",
										"description": "the batch file clearing report reference",
										"example": "1691"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "24"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback24Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the Xpollens internal card id",
														"example": "1691"
													},
													"reference": {
														"type": "string",
														"description": "the batch file clearing report reference",
														"example": "1691"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "24"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback25Url}": {
			"post": {
				"summary": "#25 - Token lifecycle management",
				"description": "Callback received in case of a token status change",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer",
										"description": "the Xpollens card id",
										"example": 637877811699419000
									},
									"reference": {
										"type": "string",
										"description": "the reference or alias of the card",
										"example": "card-tgHqiYVAb"
									},
									"type": {
										"type": "integer",
										"description": "the callback type",
										"example": 25
									},
									"tokenValue": {
										"type": "string",
										"description": "the token value",
										"example": "4556278170002598"
									},
									"tokenReferenceID": {
										"type": "string",
										"description": "the unique VISA ID for the token associated with the PAN",
										"example": "DNITHE382213043566641963"
									},
									"tokenRequestorID": {
										"type": "string",
										"description": "the unique VISA ID assigned to the initiator of the token request",
										"example": "40060030120"
									},
									"panReferenceID": {
										"type": "string",
										"description": "the VISA PAN reference",
										"example": "V-3022130435665458960659"
									},
									"status": {
										"type": "string",
										"description": "the token status :  \nA = active for payment  \nI = inactive for payment  \nS = temporarily suspended for payment  \nD = permanently deactivated for payment",
										"example": "I"
									},
									"messageReasonCode": {
										"type": "integer",
										"description": "Equal to 1400 (Token creation) or null",
										"example": 1400
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback25Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the Xpollens card id",
														"example": "637877811699419000"
													},
													"reference": {
														"type": "string",
														"description": "the reference or alias of the card",
														"example": "card-tgHqiYVAb"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "25"
													},
													"tokenValue": {
														"type": "string",
														"description": "the token value",
														"example": "4556278170002598"
													},
													"tokenReferenceID": {
														"type": "string",
														"description": "the unique VISA ID for the token associated with the PAN",
														"example": "DNITHE382213043566641963"
													},
													"tokenRequestorID": {
														"type": "string",
														"description": "the unique VISA ID assigned to the initiator of the token request",
														"example": "40060030120"
													},
													"panReferenceID": {
														"type": "string",
														"description": "the VISA PAN reference",
														"example": "V-3022130435665458960659"
													},
													"status": {
														"type": "string",
														"description": "the token status :  \nA = active for payment  \nI = inactive for payment  \nS = temporarily suspended for payment  \nD = permanently deactivated for payment",
														"example": "I"
													},
													"messageReasonCode": {
														"type": "string",
														"description": "Equal to 1400 (Token creation) or null",
														"example": "1400"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback26Url}": {
			"post": {
				"summary": "#26 - OTP SMS",
				"description": "Callback received when a One Time Password is sent via SMS",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the Xpollens card id",
										"example": "637877811699419000"
									},
									"reference": {
										"type": "string",
										"description": "the reference or alias of the card",
										"example": "card-tgHqiYVAb"
									},
									"type": {
										"type": "integer",
										"description": "the callback type",
										"example": "26"
									},
									"otpValue": {
										"type": "integer",
										"description": "the value of the OTP",
										"example": "1234AB"
									},
									"tokenValue": {
										"type": "integer",
										"description": "the token value",
										"example": "4642353030856914"
									},
									"tokenReferenceId": {
										"type": "string",
										"description": "Unique VISA ID for the token associated with the PAN",
										"example": "DNITHE464235303085691499"
									},
									"tokenRequestorID": {
										"type": "string",
										"description": "the unique VISA ID assigned to the initiator of the token request",
										"example": "40060030120"
									},
									"panReferenceID": {
										"type": "string",
										"description": "the VISA PAN reference",
										"example": "V-3022130435665458960659"
									},
									"secureElementId": {
										"type": "string",
										"description": "the secure element ID",
										"example": ""
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback26Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the Xpollens card id",
														"example": "637877811699419000"
													},
													"reference": {
														"type": "string",
														"description": "the reference or alias of the card",
														"example": "card-tgHqiYVAb"
													},
													"type": {
														"type": "integer",
														"description": "the callback type",
														"example": "26"
													},
													"otpValue": {
														"type": "integer",
														"description": "the value of the OTP",
														"example": "1234AB"
													},
													"tokenValue": {
														"type": "integer",
														"description": "the token value",
														"example": "4642353030856914"
													},
													"tokenReferenceId": {
														"type": "string",
														"description": "Unique VISA ID for the token associated with the PAN",
														"example": "DNITHE464235303085691499"
													},
													"tokenRequestorID": {
														"type": "string",
														"description": "the unique VISA ID assigned to the initiator of the token request",
														"example": "40060030120"
													},
													"panReferenceID": {
														"type": "string",
														"description": "the VISA PAN reference",
														"example": "V-3022130435665458960659"
													},
													"secureElementId": {
														"type": "string",
														"description": "the secure element ID",
														"example": ""
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback29Url}": {
			"post": {
				"summary": "#29 - P2P transfer",
				"description": "Callback received in case of status change in Peer to Peer (P2P) transfer",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the Xpollens transaction id",
										"example": "mmd8l3e3l"
									},
									"receiver": {
										"type": "string",
										"description": "the benefeciary account appUserId",
										"example": "2voh0r42a"
									},
									"sender": {
										"type": "string",
										"description": "the sender account appUserId",
										"example": "999OB-COM"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "29"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback29Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the Xpollens transaction id",
														"example": "mmd8l3e3l"
													},
													"receiver": {
														"type": "string",
														"description": "the benefeciary account appUserId",
														"example": "2voh0r42a"
													},
													"sender": {
														"type": "string",
														"description": "the sender account appUserId",
														"example": "999OB-COM"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "29"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback31Url}": {
			"post": {
				"summary": "#31 - KYC complementary diligence",
				"description": "Callback received in case of status change in the KYC complementary due diligence (be it SCT IN or Instant Payment)",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "callback type",
										"example": "31"
									},
									"status": {
										"type": "string",
										"description": "Status of the KYC demand :  \n- Validated  \n- Refused  \n- To_Review_Manually",
										"example": "To_Review_Manually"
									},
									"appUserId": {
										"type": "string",
										"description": "User unique identifier",
										"example": "NemaabcJs"
									},
									"diligenceType": {
										"type": "string",
										"description": "the type of diligence :  \n- SCTIN" ,
										"example": "SCTIN"
									},
									"reason": {
										"type": "string",
										"description": "the reason of acceptance or rejection of the diligence",
										"example": "The beneficiary's name is different from the transmitter's name"
									},
									"amount": {
										"type": "number",
										"description": "the amount of the money in transfer  (in cents of euro)",
										"example": "145"
									},
									"transferDate": {
										"type": "string",
										"format": "date_time",
										"description": "the date of the money in transfer",
										"example": "2021-01-30T08:30:00Z"
									},
									"transmitterFullName": {
										"type": "string",
										"description": "the firstname and lastname (and birthname if existing) of the transmitter",
										"example": "Epp Sandra"
									},
									"operationType": {
										"type": "string",
										"description": "the type of operation :  \n- SCT_In  \n- InstantPayment_In",
										"example": "SCT_In"
									},
									"orderId": {
										"type": "string",
										"description": "the transaction orderId",
										"example": "rx193bo32"
									},
									"score": {
										"type": "object",
										"properties": {
											"name": {
												"type": "number",
												"description": "the result of the identity matching algorithm (percentage)",
												"example": "100"
											},
											"firstName": {
												"type": "number",
												"description": "the result of the identity matching algorithm (percentage)",
												"example": "100"
											}
										}
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback31Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "JSON Body",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"description": "callback type",
														"example": "31"
													},
													"status": {
														"type": "string",
														"description": "Status of the KYC demand :  \n- Validated  \n- Refused  \n- To_Review_Manually",
														"example": "To_Review_Manually"
													},
													"appUserId": {
														"type": "string",
														"description": "User unique identifier",
														"example": "NemaabcJs"
													},
													"diligenceType": {
														"type": "string",
														"description": "the type of diligence :  \n- SCTIN",
														"example": "SCTIN"
													},
													"reason": {
														"type": "string",
														"description": "the reason of acceptance or rejection of the diligence",
														"example": "The beneficiary's name is different from the transmitter's name"
													},
													"amount": {
														"type": "number",
														"description": "the amount of the money in transfer  (in cents of euro)",
														"example": "145"
													},
													"transferDate": {
														"type": "string",
														"format": "date_time",
														"description": "the date of the money in transfer",
														"example": "2021-01-30T08:30:00Z"
													},
													"transmitterFullName": {
														"type": "string",
														"description": "the firstname and lastname (and birthname if existing) of the transmitter",
														"example": "Epp Sandra"
													},
													"operationType": {
														"type": "string",
														"description": "the type of operation :  \n- SCT_In  \n- InstantPayment_In",
														"example": "SCT_In"
													},
													"orderId": {
														"type": "string",
														"description": "the transaction orderId",
														"example": "rx193bo32"
													},
													"score": {
														"type": "object",
														"properties": {
															"name": {
																"type": "number",
																"description": "the result of the identity matching algorithm (percentage)",
																"example": "100"
															},
															"firstName": {
																"type": "number",
																"description": "the result of the identity matching algorithm (percentage)",
																"example": "100"
															}
														}
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback32Url}": {
			"post": {
				"summary": "#32 - Risk level",
				"description": "Callback received in case of risk level change for a user",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"eventDate": {
										"type": "string",
										"format": "date-time",
										"description": "the date of the risk level event change",
										"example": "2021-01-30T08:30:00Z"
									},
									"appUserId": {
										"type": "string",
										"description": "the benefeciary account appUserId",
										"example": "2voh0r42a"
									},
									"riskLevel": {
										"type": "string",
										"description": "the level of customer risk :  \n- low  \n- medium  \n- high",
										"example": "high"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "32"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback32Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"eventDate": {
														"type": "string",
														"format": "date-time",
														"description": "the date of the risk level event change",
														"example": "2021-01-30T08:30:00Z"
													},
													"appUserId": {
														"type": "string",
														"description": "the benefeciary account appUserId",
														"example": "2voh0r42a"
													},
													"riskLevel": {
														"type": "string",
														"description": "the level of customer risk :  \n- low  \n- medium  \n- high",
														"example": "high"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "32"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback33Url}": {
			"post": {
				"summary": "#33 - Client debt",
				"description": "Callback received in case of client debt change for a user",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "number",
										"description": "the callback type",
										"example": 33
									},
									"date": {
										"type": "string",
										"format": "date-time",
										"description": "the origin operation creation date",
										"example": "2021-02-26T10:01:34.447732+00:00"
									},
									"id": {
										"type": "string",
										"description": "Origin operation id",
										"example": "ECDDAD31242"
									},
									"userId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "94j8Jnw9d"
									},
									"originAmount": {
										"type": "number",
										"description": "the amount of the debt origin operation (decimal in euro)",
										"example": "125.04"
									},
									"status": {
										"type": "integer",
										"description": "the debt status :  \n0 =in progress  \n1 = closed with recovery   \n2 = closed without recovery ",
										"example": "0"
									},
									"debtAmount": {
										"type": "number",
										"description": "the actual debt amount (decimal in euro)",
										"example": "1.42"
									},
									"debtReason": {
										"type": "string",
										"description": "the functional cases that led to the debt creation :  \n- P2P  \n- CardOperation",
										"example": "CardOperation"
									},
									"lossAndProfitBalance": {
										"type": "number",
										"description": "the balance of loss and profit account after the debt creation (decimal, in euro)",
										"example": "145258.55"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback33Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "number",
														"description": "the callback type",
														"example": 33
													},
													"date": {
														"type": "string",
														"format": "date-time",
														"description": "the origin operation creation date",
														"example": "2021-02-26T10:01:34.447732+00:00"
													},
													"id": {
														"type": "string",
														"description": "Origin operation id",
														"example": "ECDDAD31242"
													},
													"userId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "94j8Jnw9d"
													},
													"originAmount": {
														"type": "number",
														"description": "the amount of the debt origin operation (decimal in euro)",
														"example": "125.04"
													},
													"status": {
														"type": "integer",
														"description": "the debt status :  \n0 =in progress  \n1 = closed with recovery   \n2 = closed without recovery ",
														"example": "0"
													},
													"debtAmount": {
														"type": "number",
														"description": "the actual debt amount (decimal in euro)",
														"example": "1.42"
													},
													"debtReason": {
														"type": "string",
														"description": "the functional cases that led to the debt creation :  \n- P2P  \n- CardOperation",
														"example": "CardOperation"
													},
													"lossAndProfitBalance": {
														"type": "number",
														"description": "the balance of loss and profit account after the debt creation (decimal, in euro)",
														"example": "145258.55"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback34Url}": {
			"post": {
				"summary": "#34 - User onboarding",
				"description": "Callback received in case of client onboarding status change",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "34"
									},
									"userRecordStatus": {
										"type": "string",
										"description": "the status of the user record :  \n-Initialized  \n-InProgress  \n-Validated  \n-Refused",
										"example": "InProgress"
									},
									"appUserId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "70rot07ay"
									},
									"publicUserCode": {
										"type": "string",
										"description": "this corresponds to issuerClientID in Antelop system. It is used to create the wallet in the Antelop system.",
										"example": "363O2TWZ3787"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback34Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "34"
													},
													"userRecordStatus": {
														"type": "string",
														"description": "the status of the user record :  \n-Initialized  \n-InProgress  \n-Validated  \n-Refused",
														"example": "InProgress"
													},
													"appUserId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "70rot07ay"
													},
													"publicUserCode": {
														"type": "string",
														"description": "this corresponds to issuerClientID in Antelop system. It is used to create the wallet in the Antelop system.",
														"example": "363O2TWZ3787"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback35Url}": {
			"post": {
				"summary": "#35 - Strong authentication enrollment",
				"description": "Callback received in case of client SCA (Strong Customer Authentication) status change",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "35"
									},
									"AppUserId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "610152c9J"
									},
									"ActivationCode": {
										"type": "string",
										"description": "the code used to activate the wallet (32 char)",
										"example": "0xd14c7c77a134d87b45ec82cac16ac631"
									},
									"ErrorMessage": {
										"type": "string",
										"description": "the error message if an error occured",
										"example": ""
									},
									"ExtraData": {
										"type": "object",
										"properties": {
											"WebViewUrl": {
												"type": "string",
												"description": "the webview URL",
												"example": "https://example.com/api/v2/static/dist/index.html?technicalId=D6C39X"
											}
										}
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback35Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "35"
													},
													"AppUserId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "610152c9J"
													},
													"ActivationCode": {
														"type": "string",
														"description": "the code used to activate the wallet (32 char)",
														"example": "0xd14c7c77a134d87b45ec82cac16ac631"
													},
													"ErrorMessage": {
														"type": "string",
														"description": "the error message if an error occured",
														"example": ""
													},
													"ExtraData": {
														"type": "object",
														"properties": {
															"WebViewUrl": {
																"type": "string",
																"description": "the webview URL",
																"example": "https://example.com/api/v2/static/dist/index.html?technicalId=D6C39X"
															}
														}
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback05Url}/?type={type}&id={id}&userid={userid}": {
			"post": {
				"summary": "#05 - Bank card registration - DEPRECATED",
				"description": "Callback received in case of status change in a bank card registration used in a topup",
				"parameters": [
					{
						"name": "callback05Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible by the source server",
						"schema": {
							"type": "string",
							"example": "enk0r3xvfg4ms.x.pipedream.net"
						}
					},
					{
						"name": "type",
						"in": "path",
						"required": true,
						"description": "callback type",
						"schema": {
							"type": "string",
							"example": "5"
						}
					},
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "the saved card Appcardid",
						"schema": {
							"type": "string",
							"example": "yvzinayg1"
						}
					},
					{
						"name": "userid",
						"in": "path",
						"required": true,
						"description": "the appuserid related to the appcardid",
						"schema": {
							"type": "string",
							"example": "SBTEIX-29"
						}
					}
				],
				"callbacks": {
					"onData": {
						"https://YourCallbackAdress?type=5&id=yvzinayg1&userid=SBTEIX-29": {
							"post": {
								"requestBody": {
									"description": "Example",
									"content": {
										"application/x-www-form-urlencoded": {
											"schema": {
												"type": "string",
												"example": "https://YourCallbackUrl?type=5&id=yvzinayg1&userid=SBTEIX-29"
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback05Url}": {
			"post": {
				"summary": "#05 - Bank card registration",
				"description": "Callback received in case of status change in a bank card registration used in a topup",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the saved card Appcardid",
										"example": "yvzinayg1"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "5"
									},
									"userid": {
										"type": "string",
										"description": "the appuserid related to the appcardid",
										"example": "SBTEIX-29"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback05Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the saved card Appcardid",
														"example": "yvzinayg1"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "5"
													},
													"userid": {
														"type": "string",
														"description": "the appuserid related to the appcardid",
														"example": "SBTEIX-29"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback37Url}/?id={id}&error={error}&status={status}&type={type}&initialOrderID={initialOrderID}&amount={amount}": {
			"post": {
				"summary": "#37 - Topup refund",
				"description": "Callback received in case of a status change for in the topup refund status",
				"parameters": [
					{
						"name": "callback37Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible by the source server",
						"schema": {
							"type": "string",
							"example": "enk0r3xvfg4ms.x.pipedream.net"
						}
					},
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "the transaction id",
						"schema": {
							"type": "string",
							"example": "refund-TOPUP123"
						}
					},
					{
						"name": "error",
						"in": "path",
						"required": true,
						"description": "the error codes for failed payments :  \n0 = 0XXX operation succeeded or still processing  \n10 = 1XXX operation rejected because of bad request configuration  \n11 = 2XXX operation rejected because of bad reference usage  \n12 = 3XXX operation rejected because of bad account configuration  \n13 = 4XXX operation rejected because of the bank or the supplier  \n14 = 5XXX operation rejected because of a system error  \n15 = 6XXX operation rejected because of anti-fraud engine",
						"schema": {
							"type": "string",
							"example": "0"
						}
					},
					{
						"name": "status",
						"in": "path",
						"required": true,
						"description": "the transaction status :  \n-1 = unknow  \n0 = waiting  \n1 = completed  \n2 = refunded  \n3 = refused  \n4 = waiting for validation  \n5 = cancelled  \n6 = waiting to be sent",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "type",
						"in": "path",
						"required": true,
						"description": "the callback type",
						"schema": {
							"type": "string",
							"example": "37"
						}
					},
					{
						"name": "initialOrderID",
						"in": "path",
						"required": true,
						"description": "initial transaction orderid",
						"schema": {
							"type": "string",
							"example": "ABCD1234"
						}
					},
					{
						"name": "amount",
						"in": "path",
						"required": true,
						"description": "the transaction amount",
						"schema": {
							"type": "number",
							"format": "float",
							"example": "1234.56"
						}
					}
				],
				"callbacks": {
					"onData": {
						"http://YourCallbackUrl/?id=refund-TOPUP123-1&error=0&status=0&type=37&initialOrderID=TOPUP123&amount=600": {
							"post": {
								"requestBody": {
									"description": "Example",
									"content": {
										"application/x-www-form-urlencoded": {
											"schema": {
												"type": "string",
												"example": "http://YourCallbackUrl/?id=refund-TOPUP123-1&error=0&status=0&type=37&initialOrderID=TOPUP123&amount=600"
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback36Url}": {
			"post": {
				"summary": "#36 - Strong authentication",
				"description": "Callback received for strong authentication (sensitives actions)",
				"parameters": [
					{
						"name": "callback36Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"format": "uri",
							"example": "tonys-server.com"
						}
					},
					{
						"name": "AuthenticationId",
						"in": "header",
						"required": true,
						"description": "the id of the authentication operation (used to link to the synchronous response)",
						"schema": {
							"type": "string",
							"example": "3285f14c-d0e3-4218-9482-30dd9f0c814f"
						}
					},
					{
						"name": "Type",
						"in": "header",
						"required": true,
						"description": "the callback type",
						"schema": {
							"type": "number",
							"example": "36"
						}
					},
					{
						"name": "AppUserId",
						"in": "header",
						"required": true,
						"description": "the user unique identifier",
						"schema": {
							"type": "string",
							"example": "jHiBCTeAK"
						}
					},
					{
						"name": "AuthenticationResultDate",
						"in": "header",
						"required": true,
						"description": "the effective authentication result date",
						"schema": {
							"type": "string",
							"format": "date-time",
							"example": "2021-10-13T08:32:23+00:00"
						}
					},
					{
						"name": "RequestProcessDate",
						"in": "header",
						"required": true,
						"description": "the effective end date for the operation",
						"schema": {
							"type": "string",
							"format": "date-time",
							"example": "2021-10-13T08:32:24.1177698+00:00"
						}
					},
					{
						"name": "RequestResponseCode",
						"in": "header",
						"required": true,
						"description": "the Http status code of the operation",
						"schema": {
							"type": "string",
							"example": "200"
						}
					},
					{
						"name": "RequestDate",
						"in": "header",
						"required": true,
						"description": "the effective date for the operation",
						"schema": {
							"type": "string",
							"format": "date-time",
							"example": "2021-10-13T08:31:21.5157898+00:00"
						}
					},
					{
						"name": "Status",
						"in": "header",
						"required": true,
						"description": "the status of the authentication",
						"schema": {
							"type": "string",
							"example": "succeeded"
						}
					},
					{
						"name": "Reason",
						"in": "header",
						"required": true,
						"description": "the reason of failure if applicable :  \n- TIMEOUT: customer did not authenticate in due time  \n- CANCELED: customer CANCELED the authentication request  \n- FAILED: customer did not successfully authenticate",
						"schema": {
							"type": "string",
							"example": ""
						}
					}
				],
				"callbacks": {
					"onData": {
						"https://yourCallbackAdress/": {
							"post": {
								"requestBody": {
									"description": "Example",
									"content": {
										"application/json": {
											"schema": {
												"type": "string",
												"example": "https://YourCallbackUrl/"
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback38Url}": {
			"post": {
				"summary": "#38 - Instant payment In",
				"description": "Callback received in case of status change (or new) in an ingoing instant payment",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the transaction id",
										"example": "227"
									},
									"orderId": {
										"type": "string",
										"description": "the transaction orderid",
										"example": "test-ip0306201-4"
									},
									"userId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "h9jZLHfV3"
									},
									"operationAmount": {
										"type": "string",
										"description": "the transaction amount (decimal, in euro)",
										"example": "0.14"
									},
									"status": {
										"type": "string",
										"description": "the transaction status :  \n0 = pending  \n1 = succeeded  \n2 = refund  \n3 = failed",
										"example": "3"
									},
									"rejectReason": {
										"type": "string",
										"description": "the reject reason if applicable",
										"example": "500"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "38"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback38Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the transaction id",
														"example": "227"
													},
													"orderId": {
														"type": "string",
														"description": "the transaction orderid",
														"example": "test-ip0306201-4"
													},
													"userId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "h9jZLHfV3"
													},
													"operationAmount": {
														"type": "string",
														"description": "the transaction amount (decimal, in euro)",
														"example": "0.14"
													},
													"status": {
														"type": "string",
														"description": "the transaction status :  \n0 = pending  \n1 = succeeded  \n2 = refund  \n3 = failed",
														"example": "3"
													},
													"rejectReason": {
														"type": "string",
														"description": "the reject reason if applicable",
														"example": "500"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "38"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback39Url}": {
			"post": {
				"summary": "#39 - Instant payment Out",
				"description": "Callback received in case of status change in an outgoing instant payment",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"description": "the transaction id",
										"example": "227"
									},
									"orderId": {
										"type": "string",
										"description": "the transaction orderid",
										"example": "test-ip0306201-4"
									},
									"userId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "h9jZLHfV3"
									},
									"operationAmount": {
										"type": "string",
										"description": "the transaction amount (decimal, in euro)",
										"example": "0.14"
									},
									"status": {
										"type": "string",
										"description": "the transaction status :  \n0 = pending  \n1 = succeeded  \n2 = refund  \n3 = failed",
										"example": "3"
									},
									"rejectReason": {
										"type": "string",
										"description": "the reject reason if applicable",
										"example": "500"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "39"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback39Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"id": {
														"type": "string",
														"description": "the transaction id",
														"example": "227"
													},
													"orderId": {
														"type": "string",
														"description": "the transaction orderid",
														"example": "test-ip0306201-4"
													},
													"userId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "h9jZLHfV3"
													},
													"operationAmount": {
														"type": "string",
														"description": "the transaction amount (decimal, in euro)",
														"example": "0.14"
													},
													"status": {
														"type": "string",
														"description": "the transaction status :  \n0 = pending  \n1 = succeeded  \n2 = refund  \n3 = failed",
														"example": "3"
													},
													"rejectReason": {
														"type": "string",
														"description": "the reject reason if applicable",
														"example": "500"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "39"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback40Url}": {
			"post": {
				"summary": "#40 - Fund reservation",
				"description": "Callback received in case of status change in a fund reservation",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "40"
									},
									"operationId": {
										"type": "string",
										"description": "the transaction id",
										"example": "229"
									},
									"orderId": {
										"type": "string",
										"description": "the transaction orderId",
										"example": "test-ip-out-nm75"
									},
									"userId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "h9jZLHfV3"
									},
									"operationAmount": {
										"type": "string",
										"description": "the transaction amount (decimal, in euro)",
										"example": "0.13"
									},
									"authorizationBalanceAmount": {
										"type": "string",
										"description": "the authorization balance",
										"example": "984.68"
									},
									"dispositionCheckStatusId": {
										"type": "string",
										"description": "the disposition check status :  \n1 = not received  \n2 = requested  \n3 = authorized  \n10 = refused  \n11 = canceled",
										"example": "3"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback40Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "40"
													},
													"operationId": {
														"type": "string",
														"description": "the transaction id",
														"example": "229"
													},
													"orderId": {
														"type": "string",
														"description": "the transaction orderId",
														"example": "test-ip-out-nm75"
													},
													"userId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "h9jZLHfV3"
													},
													"operationAmount": {
														"type": "string",
														"description": "the transaction amount (decimal, in euro)",
														"example": "0.13"
													},
													"authorizationBalanceAmount": {
														"type": "string",
														"description": "the authorization balance",
														"example": "984.68"
													},
													"dispositionCheckStatusId": {
														"type": "string",
														"description": "the disposition check status :  \n1 = not received  \n2 = requested  \n3 = authorized  \n10 = refused  \n11 = canceled",
														"example": "3"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback43Url}": {
			"post": {
				"summary": "#43 - Legal entity",
				"description": "Callback received in case of a change in a legal entity",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "43"
									},
									"legalEntityId": {
										"type": "string",
										"description": "The legal entity unique identifier",
										"example": "rexapei79qohs"
									},
									"registrationNumber": {
										"type": "string",
										"description": "The legal identification number of the legal entity  \n(ex : SIREN in France)",
										"example": "rx193bo32"
									},
									"registrationCountry": {
										"type": "string",
										"description": "The registration country of the legal entity (ISO 3166-1 code)",
										"example": "rx193bo32"
									},
									"legalEntityCreationStatus": {
										"type": "string",
										"description": " The legal entity creation status :  \n- Succeeded  \n- Failed",
										"example": "succeeded"
									},
									"registrationCity": {
										"type": "string",
										"description": "The legal entity registration city",
										"example": "Melbourne"
									},
									"companyName": {
										"type": "string",
										"description": "the name of the legal entity",
										"example": "NM Corporation"
									},
									"tradeName": {
										"type": "string",
										"description": "the commercial name of the legal entity",
										"example": "NNNC"
									},
									"naceCode": {
										"type": "string",
										"description": "The legal entity type of economical activity (NACE code)",
										"example": "P85.1"
									},
									"legalForm": {
										"type": "string",
										"description": "The legal entity legal form",
										"example": "5499"
									},
									"creationDate": {
										"type": "string",
										"format": "date",
										"description": "The creation date of the legal entity",
										"example": "1982-12-08"
									},
									"legalEntityRecordStatus": {
										"type": "string",
										"description": "The onboarding status of the legal entity :  \n- Initialized  \n- InProgress \n- Validated \n- Refused ",
										"example": "initialized"
									},
									"onboardingDate": {
										"type": "string",
										"format": "date-time",
										"description": "The onboarding date of the legal entity",
										"example": "2022-02-15T19:32:10.9931518+00:00"
									},
									"turnOver": {
										"type": "string",
										"description": "The turnover of N-1 year, decimal",
										"example": "360250.99"
									},
									"currency": {
										"type": "string",
										"description": "Currency of the turnover (ISO 4217 code)",
										"example": "EUR"
									},
									"highFinancialIncome": {
										"type": "boolean",
										"description": "Is the legal entity a high financial income entity",
										"example": "false"
									},
									"listedInStockMarkets": {
										"type": "boolean",
										"description": "Is the legal entity listed in stock markets",
										"example": "true"
									},
									"regulated": {
										"type": "boolean",
										"description": "Is the legal entity regulated under special circumstances",
										"example": "false"
									},
									"address": {
										"type": "object",
										"description": "Adress details of the legal entity",
										"properties": {
											"street": {
												"type": "string",
												"example": "51 Pender Street"
											},
											"supplementIn": {
												"type": "string",
												"example": "Enter via garden in the back"
											},
											"supplementOut": {
												"type": "string",
												"example": "Residential house"
											},
											"area": {
												"type": "string",
												"example": "East-Thornbury"
											},
											"zipCode": {
												"type": "string",
												"example": "3071"
											},
											"city": {
												"type": "string",
												"example": "Thornbury"
											},
											"country": {
												"type": "string",
												"example": "AU"
											}
										}
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback43Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string",
														"description": "The callback type",
														"example": "43"
													},
													"legalEntityId": {
														"type": "string",
														"description": "The legal entity unique identifier",
														"example": "rexapei79qohs"
													},
													"registrationNumber": {
														"type": "string",
														"description": "The legal identification number of the legal entity  \n(ex : SIREN in France)",
														"example": "rx193bo32"
													},
													"registrationCountry": {
														"type": "string",
														"description": "The registration country of the legal entity (ISO 3166-1 code)",
														"example": "rx193bo32"
													},
													"legalEntityCreationStatus": {
														"type": "string",
														"description": " The legal entity creation status :  \n- Succeeded  \n- Failed",
														"example": "Succeeded"
													},
													"registrationCity": {
														"type": "string",
														"description": "The legal entity registration city",
														"example": "Melbourne"
													},
													"companyName": {
														"type": "string",
														"description": "The name of the legal entity",
														"example": "NM Corporation"
													},
													"tradeName": {
														"type": "string",
														"description": "The commercial name of the legal entity",
														"example": "NNNC"
													},
													"naceCode": {
														"type": "string",
														"description": "The legal entity type of economical activity (NACE code)",
														"example": "P85.1"
													},
													"legalForm": {
														"type": "string",
														"description": "The legal entity legal form",
														"example": "5499"
													},
													"creationDate": {
														"type": "string",
														"format": "date",
														"description": "The creation date of the legal entity",
														"example": "1982-12-08"
													},
													"legalEntityRecordStatus": {
														"type": "string",
														"description": "The onboarding status of the legal entity :  \n- Initialized  \n- InProgress \n- Validated \n- Refused",
														"example": "Initialized"
													},
													"onboardingDate": {
														"type": "string",
														"format": "date-time",
														"description": "The onboarding date of the legal entity",
														"example": "2022-02-15T19:32:10.9931518+00:00"
													},
													"turnOver": {
														"type": "string",
														"description": "The turnover of N-1 year, decimal",
														"example": "360250.99"
													},
													"currency": {
														"type": "string",
														"description": "The currency of the turnover (ISO 4217 code)",
														"example": "EUR"
													},
													"highFinancialIncome": {
														"type": "boolean",
														"description": "Is the legal entity a high financial income entity",
														"example": "false"
													},
													"listedInStockMarkets": {
														"type": "boolean",
														"description": "Is the legal entity listed in stock markets",
														"example": "true"
													},
													"regulated": {
														"type": "boolean",
														"description": "Is the legal entity regulated under special circumstances",
														"example": "false"
													},
													"address": {
														"type": "object",
														"description": "Address details of the legal entity",
														"properties": {
															"street": {
																"type": "string",
																"example": "51 Pender Street"
															},
															"supplementIn": {
																"type": "string",
																"example": "Enter via garden in the back"
															},
															"supplementOut": {
																"type": "string",
																"example": "Residential house"
															},
															"area": {
																"type": "string",
																"example": "East-Thornbury"
															},
															"zipCode": {
																"type": "string",
																"example": "3071"
															},
															"city": {
																"type": "string",
																"example": "Thornbury"
															},
															"country": {
																"type": "string",
																"example": "AU"
															}
														}
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback44Url}": {
			"post": {
				"summary": "#44 - Fatca-EAI",
				"description": "Callback received in case of user Fatca-EAI declaration change",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"appUserId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "100120227"
									},
									"diligences": {
										"type": "array",
										"items": {
											"properties": {
												"files": {
													"type": "string",
													"description": "TBD",
													"example": "W9.png"
												},
												"status": {
													"type": "string",
													"description": "Global factaEai status of the customer",
													"example": "NOK"
												},
												"reason": {
													"type": "string",
													"description": "the reasons of refusal if applicable",
													"example": ""
												}
											}
										}
									},
									"fatcaEaiStatus": {
										"type": "string",
										"description": "the fatcaEai status",
										"example": "OK"
									},
									"date": {
										"type": "string",
										"format": "date-time",
										"description": "the date of last costumer fatcaEai status",
										"example": "2022-01-14T13:19:04+00:00"
									},
									"type": {
										"type": "string",
										"description": "the callback type",
										"example": "44"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback44Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "JSON Body",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"appUserId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "100120227"
													},
													"diligences": {
														"type": "array",
														"items": {
															"properties": {
																"files": {
																	"type": "string",
																	"description": "TBD",
																	"example": "W9.png"
																},
																"status": {
																	"type": "string",
																	"description": "Global factaEai status of the customer",
																	"example": "NOK"
																},
																"reason": {
																	"type": "string",
																	"description": "the reasons of refusal if applicable",
																	"example": ""
																}
															}
														}
													},
													"fatcaEaiStatus": {
														"type": "string",
														"description": "the fatcaEai status",
														"example": "OK"
													},
													"date": {
														"type": "string",
														"format": "date-time",
														"description": "the date of last costumer fatcaEai status",
														"example": "2022-01-14T13:19:04+00:00"
													},
													"type": {
														"type": "string",
														"description": "the callback type",
														"example": "44"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback45Url}": {
			"post": {
				"summary": "#45 - Account status",
				"description": "Callback received in case of account status change",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "integer",
										"description": "the callback type",
										"example": "45"
									},
									"appUserId": {
										"type": "string",
										"description": "the user unique identifier",
										"example": "ly_uTfks"
									},
									"accountId": {
										"type": "string",
										"description": "the account unique identifier",
										"example": "f37bf7a2-d25f-4dc8-a4e8-b530a3a60f65"
									},
									"accountStatus": {
										"type": "string",
										"description": "the account status:  \n-initialized  \n-activated  \n-frozen  \n-closed  \n-closure requested  \n-pending closure",
										"example": "frozen"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback45Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"type": {
														"type": "integer",
														"description": "the callback type",
														"example": "45"
													},
													"appUserId": {
														"type": "string",
														"description": "the user unique identifier",
														"example": "ly_uTfks"
													},
													"accountId": {
														"type": "string",
														"description": "the account unique identifier",
														"example": "f37bf7a2-d25f-4dc8-a4e8-b530a3a60f65"
													},
													"accountStatus": {
														"type": "string",
														"description": "the account status:  \n-initialized  \n-activated  \n-frozen  \n-closed  \n-closure requested  \n-pending closure",
														"example": "frozen"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback15Url}/?type={type}&userstatus={userstatus}&userid={userid}": {
			"post": {
				"summary": "#15 - User freeze",
				"description": "Callback received in case of a freeze status change for a user",
				"parameters": [
					{
						"name": "callback15Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible by the source server",
						"schema": {
							"type": "string",
							"example": "enk0r3xvfg4ms.x.pipedream.net"
						}
					},
					{
						"name": "type",
						"in": "path",
						"required": true,
						"description": "the callback type",
						"schema": {
							"type": "string",
							"example": "15"
						}
					},
					{
						"name": "userstatus",
						"in": "path",
						"required": true,
						"description": "the user new status :  \n1 = OK (not frozen)  \n2 = frozen",
						"schema": {
							"type": "string",
							"example": "2"
						}
					},
					{
						"name": "userid",
						"in": "path",
						"required": true,
						"description": "the appuserid",
						"schema": {
							"type": "string",
							"example": "x03ksnze9"
						}
					}
				],
				"callbacks": {
					"onData": {
						"https://YourCallbackUrl?type=15&userstatus=2&userid=x03ksnze9": {
							"post": {
								"requestBody": {
									"description": "Example",
									"content": {
										"application/x-www-form-urlencoded": {
											"schema": {
												"type": "string",
												"example": "https://YourCallbackUrl?type=15&userstatus=2&userid=x03ksnze9"
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		},
		"/{callback46Url}": {
			"post": {
				"summary": "#46 - KYB demand",
				"description": "Callback received in case of status change in the KYB demand",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
						    	"schema": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"description": "callback type",
										"example": "46"
									},
									"status": {
										"type": "string",
										"description": "the status of the KYB demand : \n- Initialized \n- BeingReceived (this status does not trigger this callback) \n- FullyReceived \n- Pending \n- Incomplete  \n- Complete" ,
										"example": "Incomplete"
									},
									"legalEntityId": {
										"type": "string",
										"description": "the legal entity unique identifier",
										"example": "rx193bo32"
									},
									"expectedDiligences": {
										"type": "array",
										"description": "the list of expected diligences types. It will not be displayed in the callback when all expected diligences have been received.",
										"items": {
										"type": "object",
										"properties": {
											"type": {
												"type": "string",
												"description": "the type of diligence :  \n- ExistenceProof  \n- EconomicActivityEvidence  \n- UboDeclarationForm  etc.",
												"example": "ExistenceProof"
											},
											"expectedCount": {
												"type": "integer",
												"description": "the expected diligences count",
												"example": 2
											},
											"possibleDiligenceSubTypes": {
												"type": "array",
												"description": "the list of possible diligences sub type",
												"items": {
												"type": "string"
												},
												"example": [
													"COMPANY_STATUTES",
													"KBIS"
													]
											}
										}
										}
									},
										"receivedDiligences": {
										"type": "array",
										"description": "the list of diligences types that are received",
										"items": {
										"type": "object",
										"properties": {
											"diligenceType": {
												"type": "string",
												"description": "the diligence sub type :  \n- KBIS  \n- COMPANY_STATUTES \n- OTHER_ECONOMIC_ACTIVITY_EVIDENCE  etc.",
												"example": "KBIS"
											},
											"status": {
												"type": "string",
												"description": "the status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually",
												"example": "Refused"
											},
											"reason": {
												"type": "string",
												"description": "the reason for rejection of the diligence",
												"example": "Illegible document"
											}
										}
									}
									},
									"contributors": {
										"type": "array",
										"description": "the list of contributors related to the legal entity. It will be displayed in the callback when all expected diligences for the contributors have been received.",
										"items": {
										"type": "object",
										"properties": {
											"status": {
												"type": "string",
												"description": "the status of the KYB demand : \n- Initialized \n- BeingReceived (this status will not be received in this callback) \n- FullyReceived \n- Pending \n- Incomplete  \n- Complete",
												"example": "Complete"
											},
											"appUserId": {
												"type": "string",
												"description": "the user unique identifier",
												"example": "59d77174J"
											},
											"kycLevel": {
												"type": "string",
												"description": "the user KYC level :  \n- Medium \n- High",
												"example": "Medium"
											},
											"receivedDiligences": {
												"type": "array",
												"description": "the list of diligences types that are received",
												"items": {
										        "type": "object",
												"properties": {
													"diligenceType": {
														"type": "string",
														"description": "the diligence sub type : \n- ID_CARD  \n- PASSPORT  \n- VETERAN_CARD etc.",
														"example": "ID_CARD"
													},
													"status": {
														"type": "string",
														"description": "the status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually",
														"example": "Validated"
													},
													"reason": {
														"type": "string",
														"description": "the reason for rejection of the diligence",
														"example": ""
													}
												}
												}
											}
										}
										}
									}
								}
							}
						}
					}
					},
					"parameters": [
						{
							"name": "callback46Url",
							"in": "path",
							"required": true,
							"description": "the location where data will be sent.  Must be network accessible by the source server ",
							"schema": {
								"type": "string",
								"example": "tonys-server.com"
							}
						}
					],
					"callbacks": {
						"onData": {
							"{$request.query.callbackUrl}/data": {
								"post": {
									"requestBody": {
										"description": "callback example",
										"content": {
											"application/json": {
												"schema": {
													"type": "object",
													"properties": {
														"type": {
															"type": "string",
															"description": "callback type",
															"example": "46"
														},
														"status": {
															"type": "string",
															"description": "the status of the KYB demand : \n- Initialized \n- BeingReceived (this status does not trigger this callback) \n- FullyReceived \n- Pending \n- Incomplete  \n- Complete",
															"example": "Incomplete"
														},
														"legalEntityId": {
															"type": "string",
															"description": "the legal entity unique identifier",
															"example": "rx193bo32"
														},
														"expectedDiligences": {
															"type": "array",
															"description": "the list of expected diligences types. It is not returned in the callback when all expected diligences are received.",
															"items": {
										                    "type": "object",
															"properties": {
																"type": {
																	"type": "string",
																	"description": "the type of diligence :  \n- ExistenceProof  \n- EconomicActivityEvidence  \n- UboDeclarationForm  etc.",
																	"example": "ExistenceProof"
																},
																"expectedCount": {
																	"type": "integer",
																	"description": "the expected diligences count",
																	"example": 2
																},
																"possibleDiligenceSubTypes": {
																	"type": "array",
																	"description": "the list of possible diligences sub type",
																	"items": {
																	"type": "string"
																	},
																	"example": [
																		"COMPANY_STATUTES",
																		"KBIS"
																	]
																}
															}
															}
														},
														"receivedDiligences": {
															"type": "array",
															"description": "the list of diligences types that are received",
															"items": {
															"type": "object",
															"properties": {
																"diligenceType": {
																	"type": "string",
																	"description": "the diligence sub type :  \n- KBIS  \n- COMPANY_STATUTES \n- OTHER_ECONOMIC_ACTIVITY_EVIDENCE  etc.",
																	"example": "KBIS"
																},
																"status": {
																	"type": "string",
																	"description": "the status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually",
																	"example": "Refused"
																},
																"reason": {
																	"type": "string",
																	"description": "the reason for rejection of the diligence",
																	"example": "Illegible document"
																}
															}
															}
														},
														"contributors": {
															"type": "array",
															"description": "the KYC demand of the contributors related to the legal entity",
															"items": {
															"type": "object",
															"properties": {
																"status": {
																	"type": "string",
																	"description": "the status of the KYC demand :  \n- Initialized \n- BeingReceived (this status will not be received in this callback) \n- FullyReceived \n- Pending \n- Incomplete  \n- Complete",
																	"example": "Complete"
																},
																"appUserId": {
																	"type": "string",
																	"description": "the user unique identifier",
																	"example": "59d77174J"
																},
																"kycLevel": {
																	"type": "string",
																	"description": "the User's KYC level :  \n- Medium \n- High",
																	"example": "Medium"
																},
																"receivedDiligences": {
																	"type": "array",
																	"description": "List of diligences types that are received",
																	"items": {
																	"type": "object",
																	"properties": {
																		"diligenceType": {
																			"type": "string",
																			"description": "Diligence sub type : \n- ID_CARD  \n- PASSPORT  \n- VETERAN_CARD etc.",
																			"example": "ID_CARD"
																		},
																		"status": {
																			"type": "string",
																			"description": "Status of diligence:  \n- Validated  \n- Refused  \n- To_Review_Manually \n- Received",
																			"example": "Validated"
																		},
																		"reason": {
																			"type": "string",
																			"description": "Reason for rejection of the diligence",
																			"example": ""
																		}
																	}
																	}
																}
															}
															}
														}
													}
												}
											}
										}
									},
									"responses": {
										"202": {
											"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
										},
										"204": {
											"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
										}
									}
								}
							}
						}
					}
				}
		},
		"/{callback47Url}": {
			"post": {
				"summary": "#47 - Re-upload of diligences",
				"description": "Callback received in case of a webview URL is sent by the KYC provider to enable the re-upload of diligences",
				"requestBody": {
					"description": "JSON Body",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"appUserId": {
										"type": "string",
										"description": "User unique identifier",
										"example": "rx193bo32"
									},
									"webviewUrl": {
										"type": "string",
										"description": "the new webview URL that enables the re-upload of diligences ",
										"example": "https://example.com/api/v2/static/dist/index.html?technicalId=D6C39X"
									}
								}
							}
						}
					}
				},
				"parameters": [
					{
						"name": "callback47Url",
						"in": "path",
						"required": true,
						"description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
						"schema": {
							"type": "string",
							"example": "tonys-server.com"
						}
					}
				],
				"callbacks": {
					"onData": {
						"{$request.query.callbackUrl}/data": {
							"post": {
								"requestBody": {
									"description": "callback example",
									"content": {
										"application/json": {
											"schema": {
												"type": "object",
												"properties": {
													"appUserId": {
														"type": "string",
														"description": "User unique identifier",
														"example": "rx193bo32"
													},
													"webviewUrl": {
														"type": "string",
														"description": "the new webview URL that enables the re-upload of diligences ",
														"example": "https://example.com/api/v2/static/dist/index.html?technicalId=D6C39X"
													}
												}
											}
										}
									}
								},
								"responses": {
									"202": {
										"description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
									},
									"204": {
										"description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"Bearer token authorization": {
				"type": "http",
				"description": "Authentication with bearer token",
				"scheme": "bearer"
			},
			"Sts authentication": {
				"type": "oauth2",
				"x-client-id": "",
				"x-client-secret": "",
				"flows": {
					"clientCredentials": {
						"tokenUrl": "https://ic-connect.s-money.net/connect/token",
						"scopes": {
							"partner": "",
							"internal_settings": "",
							"thirdparty_kyc": ""
						}
					}
				}
			}
		}
	},
	"security": [
		{
			"Bearer token authorization": []
		},
		{
			"Sts authentication": []
		}
	]
}
