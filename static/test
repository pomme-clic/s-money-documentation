{
  "openapi": "3.0.0",
  "info": {
    "title": "Callback Example",
    "version": "1.0.0"
  },
  "paths": {
    "/streams": {
      "post": {
        "description": "subscribes a client to receive out-of-band data",
        "parameters": [
          {
            "name": "callbackUrl",
            "in": "query",
            "required": true,
            "description": "the location where data will be sent.  Must be network accessible\nby the source server\n",
            "schema": {
              "type": "string",
              "format": "uri",
              "example": "https://tonys-server.com"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "subscription successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "subscription information",
                  "required": [
                    "subscriptionId"
                  ],
                  "properties": {
                    "subscriptionId": {
                      "description": "this unique identifier allows management of the subscription",
                      "type": "string",
                      "example": "2531329f-fb09-4ef7-887e-84e648214436"
                    }
                  }
                }
              }
            }
          }
        },
        "callbacks": {
          "onData": {
            "{$request.query.callbackUrl}/data": {
              "post": {
                "requestBody": {
                  "description": "subscription payload",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "userData": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "202": {
                    "description": "Your server implementation should return this HTTP status code\nif the data was received successfully\n"
                  },
                  "204": {
                    "description": "Your server should return this HTTP status code if no longer interested\nin further updates\n"
                  }
                }
              }
            }
          }
        }
      }
    }
	},
  "components": {
    "schemas": {
      "CardXpay.Application.QueryHandler.GetToken.GetSingleTokenDeviceOutputPort": {
        "type": "object",
        "properties": {
          "secureElementId": {
            "type": "string",
            "description": "SE ID (SecureElementID) represents the device ID\r\nFor SEDWPs, this value will be the SE ID in hex binary characters transformed to a 48 characterstring.\r\nFor CBPDWPs, this field will be the device ID as determined by the DWP.\r\nAll alphanumeric and special characters are allowed for CBPDWPs.\r\nRequired for all device bound tokens.",
            "nullable": true
          },
          "deviceType": {
            "type": "string",
            "description": "Values are :\r\n0 Unknown\r\n1 MobilePhone\r\n2 Tablet\r\n3 Watch\r\n4 MobilePhone or Tablet\r\n5 through 99 are Undefined",
            "nullable": true
          },
          "deviceNumber": {
            "type": "string",
            "description": "In some DWP implementations, this will be the full mobile number and in other cases only the last 4 digits of the mobile number will be provided",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Device information for a specific token"
      },
      "CardXpay.Application.QueryHandler.GetToken.GetSingleTokenOutputPort": {
        "type": "object",
        "properties": {
          "tokenValue": {
            "type": "string",
            "description": "<summary>The id of the card associated to the device or the acceptation transaction context.</summary>",
            "nullable": true
          },
          "tokenReferenceId": {
            "type": "string",
            "description": "<summary>Unique ID for the Token associated with the PAN.</summary>",
            "nullable": true
          },
          "tokenRequestorId": {
            "type": "string",
            "description": "<summary>ID assigned to the Initiator of the Token Request.</summary>",
            "nullable": true
          },
          "tokenExpiryDate": {
            "type": "string",
            "description": "The token expiration date.",
            "format": "date-time"
          },
          "tokenState": {
            "type": "string",
            "description": "<details>\r\n<summary>Restricted  values of token state are:</summary>\r\n\r\n|TokenState       |\tDescription                                                         |\r\n------------------|---------------------------------------------------------------------|\r\n|Active           | When the token is active                                            |\r\n|Inactive         | When the token is still inactive                                    |\r\n|Suspended        | When the card is locked, the token will be suspended                |\r\n|Deleted          | When the card is opposed or canceled, the token will be deativated  |\r\n\r\n<details/>\r\n",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "description": "<details>\r\n<summary>Restricted  values of token type are:</summary>\r\n\r\n|TokenType        |\tDescription                                                  |\r\n------------------|--------------------------------------------------------------|\r\n|SECURE_ELEMENT   | When the card enrolment is done on a Apple device            |\r\n|HCE              | When the card enrolment is done on an Android device         |\r\n|ECOM             | Card tokenization by an E-commerce website                   |\r\n|COF              | Card on file tokenization for a recurring subscription       |\r\n\r\n<details/>\r\n",
            "nullable": true
          },
          "tokenDeactivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tokenUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "panReferenceId": {
            "type": "string",
            "description": "<summary>This is Visa defined unique identifier for a PAN.</summary>",
            "nullable": true
          },
          "deviceInformation": {
            "$ref": "#/components/schemas/CardXpay.Application.QueryHandler.GetToken.GetSingleTokenDeviceOutputPort"
          }
        },
        "additionalProperties": false,
        "description": "Token Details Dto"
      },
      "CardXpay.Api.Model.ApiProblemDetails": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "Functional error code",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        },
        "description": "ApiProblemDetails"
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "CardXpay.Application.QueryHandler.GetToken.GetTokenCollectionOutputPort": {
        "type": "object",
        "properties": {
          "cardExternalRef": {
            "type": "string",
            "description": "<summary>The card reference attributed by the partner.</summary>",
            "nullable": true
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardXpay.Application.QueryHandler.GetToken.GetSingleTokenOutputPort"
            },
            "description": "Collection of token assigned to the card",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Output used when retrieving all the tokens assigned a specific card"
      },
      "CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort": {
        "required": [
          "tokenReferenceId",
          "tokenRequestorId"
        ],
        "type": "object",
        "properties": {
          "tokenRequestorId": {
            "type": "string",
            "description": "<summary>ID assigned to the Initiator of the Token Request.</summary>"
          },
          "tokenReferenceId": {
            "type": "string",
            "description": "<summary>Unique ID for the Token associated with the PAN.</summary>"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer-token-authorization": {
        "type": "http",
        "description": "Authentication with bearer token",
        "scheme": "bearer"
      },
    }
  },
   "security": [
    {
      "Bearer-token-authorization": [ ]
    },
  ]
}