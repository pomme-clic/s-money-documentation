{
  "openapi": "3.0.1",
  "info": {
    "title": "Version 2.0",
    "description": "CardXpay API\r\n<br/>\r\n",
    "contact": { },
    "version": "v2.0"
  },
  "paths": {
    "/api/v2.0/token/card/{cardExternalRef}": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Gets card's tokens",
        "description": "## <u>Description</u>\r\nThis endpoint allows to retrieve all the tokens associated to the card.\r\n<br/>\r\n## <u>Prerequisite</u>\r\nPrerequisite to call this endpoint is : \r\n<br/>\r\n- Client authentication.\r\n<br/>",
        "parameters": [
          {
            "name": "cardExternalRef",
            "in": "path",
            "description": "<summary>The card reference attributed by the partner.</summary>",
            "required": true,
            "schema": {
              "type": "string",
              "description": "<summary>The card reference attributed by the partner.</summary>",
              "nullable": true
            }
          },
          {
            "name": "CorrId",
            "in": "header",
            "description": "Correlation Id",
            "schema": {
              "type": "String",
              "default": "9754e791-97d5-4392-b233-6d03124362f2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Application.QueryHandler.GetToken.GetTokenCollectionOutputPort"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Application.QueryHandler.GetToken.GetTokenCollectionOutputPort"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Application.QueryHandler.GetToken.GetTokenCollectionOutputPort"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/token/{cardExternalRef}/xpayInAppVerifActivation": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "In-App Verification",
        "description": "## <u>Description</u>\r\nThis endpoint is called by the partner in order to activate the xpay token. \r\nFor Agent partner, the following strongly authenticated endpoint shall be called: /api/sca/normal/v2.0/{{appUserId}}/token/xpayInAppVerifActivation/{{cardExternalRef}}\r\n<br/>\r\n## <u>Prerequisites</u>\r\nThe prerequisites to call this endpoint are: \r\n<br/>\r\n- Client Authentication.\r\n<br/>\r\n- The token associated to the card must be inactif.",
        "parameters": [
          {
            "name": "cardExternalRef",
            "in": "path",
            "description": "<summary>The card reference attributed by the partner.</summary>",
            "required": true,
            "schema": {
              "type": "string",
              "description": "<summary>The card reference attributed by the partner.</summary>",
              "nullable": true
            }
          },
          {
            "name": "CorrId",
            "in": "header",
            "description": "Correlation Id",
            "schema": {
              "type": "String",
              "default": "1af5beaa-f431-48d5-90ad-57f4dd43587c"
            }
          }
        ],
        "requestBody": {
          "description": "The input port.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CardXpay.Api.Model.ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CardXpay.Application.QueryHandler.GetToken.GetSingleTokenDeviceOutputPort": {
        "type": "object",
        "properties": {
          "secureElementId": {
            "type": "string",
            "description": "SE ID (SecureElementID) represents the device ID\r\nFor SEDWPs, this value will be the SE ID in hex binary characters transformed to a 48 characterstring.\r\nFor CBPDWPs, this field will be the device ID as determined by the DWP.\r\nAll alphanumeric and special characters are allowed for CBPDWPs.\r\nRequired for all device bound tokens.",
            "nullable": true
          },
          "deviceType": {
            "type": "string",
            "description": "Values are :\r\n0 Unknown\r\n1 MobilePhone\r\n2 Tablet\r\n3 Watch\r\n4 MobilePhone or Tablet\r\n5 through 99 are Undefined",
            "nullable": true
          },
          "deviceNumber": {
            "type": "string",
            "description": "In some DWP implementations, this will be the full mobile number and in other cases only the last 4 digits of the mobile number will be provided",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Device information for a specific token"
      },
      "CardXpay.Application.QueryHandler.GetToken.GetSingleTokenOutputPort": {
        "type": "object",
        "properties": {
          "tokenValue": {
            "type": "string",
            "description": "<summary>The id of the card associated to the device or the acceptation transaction context.</summary>",
            "nullable": true
          },
          "tokenReferenceId": {
            "type": "string",
            "description": "<summary>Unique ID for the Token associated with the PAN.</summary>",
            "nullable": true
          },
          "tokenRequestorId": {
            "type": "string",
            "description": "<summary>ID assigned to the Initiator of the Token Request.</summary>",
            "nullable": true
          },
          "tokenExpiryDate": {
            "type": "string",
            "description": "The token expiration date.",
            "format": "date-time"
          },
          "tokenState": {
            "type": "string",
            "description": "<details>\r\n<summary>Restricted  values of token state are:</summary>\r\n\r\n|TokenState       |\tDescription                                                         |\r\n------------------|---------------------------------------------------------------------|\r\n|Active           | When the token is active                                            |\r\n|Inactive         | When the token is still inactive                                    |\r\n|Suspended        | When the card is locked, the token will be suspended                |\r\n|Deleted          | When the card is opposed or canceled, the token will be deativated  |\r\n\r\n<details/>\r\n",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "description": "<details>\r\n<summary>Restricted  values of token type are:</summary>\r\n\r\n|TokenType        |\tDescription                                                  |\r\n------------------|--------------------------------------------------------------|\r\n|SECURE_ELEMENT   | When the card enrolment is done on a Apple device            |\r\n|HCE              | When the card enrolment is done on an Android device         |\r\n|ECOM             | Card tokenization by an E-commerce website                   |\r\n|COF              | Card on file tokenization for a recurring subscription       |\r\n\r\n<details/>\r\n",
            "nullable": true
          },
          "tokenDeactivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tokenUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "panReferenceId": {
            "type": "string",
            "description": "<summary>This is Visa defined unique identifier for a PAN.</summary>",
            "nullable": true
          },
          "deviceInformation": {
            "$ref": "#/components/schemas/CardXpay.Application.QueryHandler.GetToken.GetSingleTokenDeviceOutputPort"
          }
        },
        "additionalProperties": false,
        "description": "Token Details Dto"
      },
      "CardXpay.Api.Model.ApiProblemDetails": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "Functional error code",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        },
        "description": "ApiProblemDetails"
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "CardXpay.Application.QueryHandler.GetToken.GetTokenCollectionOutputPort": {
        "type": "object",
        "properties": {
          "cardExternalRef": {
            "type": "string",
            "description": "<summary>The card reference attributed by the partner.</summary>",
            "nullable": true
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardXpay.Application.QueryHandler.GetToken.GetSingleTokenOutputPort"
            },
            "description": "Collection of token assigned to the card",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Output used when retrieving all the tokens assigned a specific card"
      },
      "CardXpay.Application.CommandHandler.ActivateToken.ActivateTokenInputPort": {
        "required": [
          "tokenReferenceId",
          "tokenRequestorId"
        ],
        "type": "object",
        "properties": {
          "tokenRequestorId": {
            "type": "string",
            "description": "<summary>ID assigned to the Initiator of the Token Request.</summary>"
          },
          "tokenReferenceId": {
            "type": "string",
            "description": "<summary>Unique ID for the Token associated with the PAN.</summary>"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer token authorization": {
        "type": "http",
        "description": "Authentication with bearer token",
        "scheme": "bearer"
      },
      "Sts authentication": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://ic-connect.s-money.net/connect/token",
            "scopes": {
              "partner": "",
              "internal_settings": "",
              "thirdparty_kyc": ""
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer token authorization": [ ]
    },
    {
      "Sts authentication": [ ]
    }
  ]
}